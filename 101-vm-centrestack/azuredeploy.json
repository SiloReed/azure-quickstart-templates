{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/SiloReed/azure-quickstart-templates/centrestack-branch/101-vm-centrestack/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "adminUsername": {
      "defaultValue": "csadmin",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "adminSQLUsername": {
      "defaultValue": "dbadmin",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Azure SQL Server."
      }
    },
    "adminSQLPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Azure SQL Server."
      }
    },
    "storageAccountsDiagName": {
      "defaultValue": "sacsdiag",
      "type": "string",
      "metadata": {
        "description": "The base name of the storage account for diagnostics. The actual name will be a lower case unique string."
      }
    },
    "storageAccountsDisksName": {
      "defaultValue": "sacsdisk",
      "type": "string",
      "metadata": {
        "description": "The base name of the storage account for boot disks. The actual name will be a lower case unique string."
      }
    },
    "storageAccountsBlobName": {
      "defaultValue": "sacsblob",
      "type": "string",
      "metadata": {
        "description": "The base name of the storage account for the back end storage blob container. The actual name will be a lower case unique string."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "CENTRESTACK",
      "metadata": {
        "description": "Specifiy the name of VM."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Specifiy the size of VM required for the VM(s)"
      },
      "defaultValue": "Standard_D2s_v3",
      "allowedValues": [
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3"
      ]
    },
    "dnsNameForPublicIP": {
      "defaultValue": "centrestack",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "databaseHost": {
      "type": "string",
      "allowedValues": [
        "Local",
        "Azure_SQL",
        "Azure_MySQL"
      ]
    },
    "serverNameSQL": {
      "defaultValue": "csazuresql",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Specifiy the name of Azure SQL Server."
      }
    }
  },
  "variables": {
    "nicName": "nic-CentreStack",
    "vnetName": "vnet-CentreStack",
    "pipName": "pip-CentreStack",
    "nsgName": "nsg-CentreStack",
    "asgName": "asg-CentreStack",
    "subnetName": "sn-CentreStack",
    "publicIPAddressType": "Static",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "saDisksName": "[toLower(concat(parameters('storageAccountsDisksName'), uniqueString(resourceGroup().id)))]",
    "saDiagName": "[toLower(concat(parameters('storageAccountsDiagName'), uniqueString(resourceGroup().id)))]",
    "saBlobName": "[toLower(concat(parameters('storageAccountsBlobName'), uniqueString(resourceGroup().id)))]",
    "containerName": "centrestackbes",
    "saType": "[if(contains(parameters('vmSize'), 's_v3'), 'Premium_LRS', 'Standard_LRS')]",
    "saTier": "[if(contains(parameters('vmSize'), 's_v3'), 'Premium', 'Standard')]",
    "powerShell": {
      "script": "Install-CentreStack.ps1",
      "folder": "scripts",
      "parameters": "[concat('-Verbose')]"
    },
    "customScriptExtName": "Install-CentreStack",
    "databaseName": "csmain",
    "collation": "SQL_Latin1_General_CP1_CI_AS",
    "maxSizeBytes": 268435456000,
    "sampleName": "",
    "zoneRedundant": false,
    "licenseType": "",
    "skuName": "S0",
    "tier": "Standard",
    "allowAzureIps": true,
    "enableATP": false
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "linkedNetworkTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://armtutorials.blob.core.windows.net/linkedtemplates/linkedNetworkTemplate.json"
        },
        "parameters": {
          "dnsNameForPublicIP": {
            "value": "[parameters('dnsNameForPublicIP')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "pipName": {
            "value": "[variables('pipName')]"
          },
          "nsgName": {
            "value": "[variables('nsgName')]"
          },
          "asgName": {
            "value": "[variables('asgName')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "comments": "virtualMachines CENTRESTACK'",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[parameters('vmName')]",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('https', '://', variables('saDisksName'), '.blob.core.windows.net', concat('/vhds/', parameters('vmName'), uniqueString(resourceGroup().id), '.vhd'))]"
            },
            "caching": "ReadWrite",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[reference('linkedNetworkTemplate').outputs.nicResourceId.value]",
              "properties": {
                "primary": true
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https', '://', variables('saDiagName'), '.blob.core.windows.net', '/')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('saDisksName'))]",
        "linkedNetworkTemplate", "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('saDiagName'))]"
      ]
    },
    {
      "comments": "storageAccounts sadisk",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[variables('saType')]",
        "tier": "[variables('saTier')]"
      },
      "kind": "StorageV2",
      "name": "[variables('saDisksName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "dependsOn": []
    },
    {
      "comments": "storageAccounts sacsdiag",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('saDiagName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "dependsOn": []
    },
    {
      "comments": "storageAccounts sacsblob",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "name": "[variables('saBlobName')]",
      "apiVersion": "2018-07-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "scale": null,
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "name": "[concat('default/', variables('containerName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "dependsOn": [
            "[variables('saBlobName')]"
          ]
        }
      ],
      "dependsOn": []
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/', variables('customScriptExtName'))]",
      "apiVersion": "2018-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(parameters('_artifactsLocation'), '/', variables('powerShell').folder, '/', variables('powerShell').script, parameters('_artifactsLocationSasToken'))]"
          ]
        },
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "protectedSettings": {
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command \"& {', './', variables('powerShell').script, ' ', variables('powerShell').parameters, '}\"')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('databaseHost'),'Azure_SQL')]",
      "apiVersion": "2017-05-10",
      "name": "linkedSQLTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://armtutorials.blob.core.windows.net/linkedtemplates/linkedSQLTemplate.json"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "serverNameSQL": {
            "value": "[parameters('serverNameSQL')]"
          },
          "adminSQLPassword": {
            "value": "[parameters('adminSQLPassword')]"
          },
          "adminSQLUsername": {
            "value": "[parameters('adminSQLUsername')]"
          },
          "databaseName": {
            "value": "[variables('databaseName')]"
          },
          "collation": {
            "value": "[variables('collation')]"
          },
          "maxSizeBytes": {
            "value": "[variables('maxSizeBytes')]"
          },
          "sampleName": {
            "value": "[variables('sampleName')]"
          },
          "zoneRedundant": {
            "value": "[variables('zoneRedundant')]"
          },
          "licenseType": {
            "value": "[variables('licenseType')]"
          },
          "skuName": {
            "value": "[variables('skuName')]"
          },
          "tier": {
            "value": "[variables('tier')]"
          },
          "allowAzureIps": {
            "value": "[variables('allowAzureIps')]"
          },
          "enableATP": {
            "value": "[variables('enableATP')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference('linkedNetworkTemplate').outputs.fqdn.value]"
    },
    "ipaddress": {
      "type": "string",
      "value": "[reference('linkedNetworkTemplate').outputs.publicIPAddress.value]"
    },
    "privateipaddress": {
      "type": "string",
      "value": "[reference('linkedNetworkTemplate').outputs.privateIPAddress.value]"
    },
    "dbconnstr": {
      "type": "string",
      "value": "[reference('linkedSQLTemplate').outputs.dbconnstr.value]"
    }
  }
}